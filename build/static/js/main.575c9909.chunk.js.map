{"version":3,"sources":["CalendarApp.js","index.js"],"names":["dataSets","availibilityStatus","statusCode","status","text","className","ReactDOM","render","react_default","a","createElement","_useState","useState","_useState2","Object","slicedToArray","availability","setAvailability","_useState3","_useState4","days","setDays","_useState5","_useState6","currentDataSet","setCurrentDataSet","_useState7","_useState8","showMask","setShowMask","fetchData","dataSet","axios","get","window","location","origin","then","_ref","data","fetchedAvailability","availabilityArray","key","hasOwnProperty","concat","toConsumableArray","time","setTimeout","catch","err","handleNextPrevClick","event","num","preventDefault","dataSetIndex","length","target","classList","add","document","querySelectorAll","forEach","el","remove","useEffect","map","day","index","timeSlot","dangerouslySetInnerHTML","__html","onClick","getElementById"],"mappings":"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","file":"static/js/main.575c9909.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst dataSets = [\n  'dataset1.json',\n  'dataset2.json',\n  'dataset3.json'\n];\n\nfunction availibilityStatus(statusCode){\n  let status = {};\n  switch(statusCode){\n    case 1:\n      status.text = 'available';\n      status.className = 'available';\n      break;\n    case 0:\n      status.text = 'booked';\n      status.className = 'booked';\n      break;\n    case -1:\n      status.text = 'out of service';\n      status.className = 'oos';\n      break;\n    default:\n      status.text = 'N/A';\n      status.className = 'oos';\n  }\n  return '<span class=\"calendar__status calendar__status--'+status.className+'\">'+status.text+'</span>';\n}\n\nexport default function CalendarApp() {\n\n    const [availability, setAvailability] = useState([]);\n    const [days, setDays] = useState([]);\n    const [currentDataSet, setCurrentDataSet] = useState(1);\n    const [showMask, setShowMask] = useState(true);\n\n    const fetchData = (dataSet)=>{\n      // Show loading spinner mask\n      setShowMask(true);\n      // Get data\n      axios.get(window.location.origin+'/api/'+dataSet)\n      .then(({ data })=> {\n\n        setDays(data.data.days); // Set days state with fetched days data\n        let fetchedAvailability = data.data.availability; // Fetched availibility data\n        let availabilityArray = []; // Array to store formatted availibility data objects\n        \n        // Loop over object to format data and store it in the availabilityArray\n        for (let key in fetchedAvailability) {\n          if (fetchedAvailability.hasOwnProperty(key)) {\n            availabilityArray = [...availabilityArray,{\n              time: key,\n              availability: fetchedAvailability[key]\n            }]\n          }\n        }\n\n        setAvailability(availabilityArray); // Set availability state\n        \n        setTimeout(()=>{\n          // fake network delay to show loading spinner\n          setShowMask(false);\n        },300);\n        \n      })\n      .catch((err)=> {})\n    }\n\n    useEffect(()=>{\n      // Initial data fetch\n      fetchData(dataSets[currentDataSet]);\n    },[]);\n\n    function handleNextPrevClick(event,num){\n      event.preventDefault();\n      const dataSetIndex = currentDataSet + num;\n\n      if(dataSetIndex == dataSets.length || dataSetIndex < 0 ){\n        return false;\n      }\n      \n      fetchData(dataSets[dataSetIndex]);\n      setCurrentDataSet(dataSetIndex);\n      \n      if(dataSetIndex==dataSets.length-1 || dataSetIndex == 0 ){\n        event.target.classList.add('controls__btn--disabled');\n      }else{\n        document.querySelectorAll('.controls__btn').forEach((el)=>{  \n          el.classList.remove('controls__btn--disabled');\n        });\n      }\n      \n    }\n    \n    return (\n      <main className=\"component\">\n        <div className=\"calendar\">\n          {days.map((day,index)=>{\n            return(\n              <div className=\"calendar__field calendar__field--date\" key={index}>{day}</div>\n            )\n          })}\n\n          {availability.map((timeSlot)=>{\n            return(\n              timeSlot['availability'].map((status,index)=>{\n                return(\n                  <div className=\"calendar__field\" key={index}>\n                    <span className=\"calendar__time\">{timeSlot.time}</span>\n                    <div dangerouslySetInnerHTML={{ __html:availibilityStatus(status)}} ></div>\n                  </div>\n                )\n              })\n            )\n            \n          })}\n          {showMask && \n              <div className=\"mask\"></div>\n          }\n        </div>\n        <nav className=\"controls\">\n          <button className=\"controls__btn\" onClick={event => handleNextPrevClick(event,-1)}>&#8678; Prev</button>\n          <button className=\"controls__btn\" onClick={event => handleNextPrevClick(event,1)}>Next &#8680;</button>\n        </nav>\n      </main>\n    );\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CalendarApp from './CalendarApp';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}